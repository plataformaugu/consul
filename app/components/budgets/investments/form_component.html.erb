<%= translatable_form_for(investment, url: url, html: { class: "budget-investment-form" }) do |f| %>

  <%= render "shared/errors", resource: investment %>

  <fieldset>
    <% if current_page?(new_budget_investment_path) %>
      <h2 class="mb-2">Hola <span style="color: #61b5d7;"><%= current_user.first_name? ? current_user.first_name : current_user.username %></span>, sube aquí tu proyecto.</h2>
    <% end %>

    <div>
      <%= render "shared/globalize_locales", resource: investment %>
    </div>

    <%= f.translatable_fields do |translations_form| %>
      <div>
        <%= translations_form.text_field :title,
              maxlength: Budget::Investment.title_max_length,
              data: suggest_data(investment),
              class: 'custom-input' %>
      </div>
      <div class="js-suggest" data-locale="<%= translations_form.locale %>"></div>

      <div>
        <%=
          f.collection_select :main_theme_id,
          MainTheme.all,
          :id,
          :name,
          {prompt: 'Elige un eje temático', label: 'Eje Temático'},
          {class: 'custom-input', style: 'width: 100%;', required: true}
        %>
      </div>

      <div>
        <%= translations_form.text_area :description,
              maxlength: Budget::Investment.description_max_length,
              class: "html-area" %>
      </div>
    <% end %>
  </fieldset>

  <%= f.invisible_captcha :subtitle %>

  <fieldset>
    <% if feature?(:allow_images) %>
      <div class="images">
        <%= render "images/nested_image", f: f %>
      </div>
    <% end %>

    <% if feature?(:allow_attached_documents) %>
      <div class="documents">
        <%= render "documents/nested_documents", f: f %>
      </div>
    <% end %>

    <div class="field" id="map-field">
      <div id="leaflet-container">
        <div style="display: none;">
          <%= f.collection_check_boxes :sector_ids, Sector.all, :name, :name, include_hidden: false, id: 'sector_ids' %>
        </div>
        <%= label_tag 'leaflet', "Unidades Vecinales" %>
        <p id="tag-list-help-text" style="font-size: 1em;">
          Sectores disponibles:
          <strong style="color: #33cc9d;">
            <span id="available-sectors">Todos</span>
          </strong><br>
        </p>
        <p id="tag-list-help-text" style="font-size: 1em; margin-top: -1em;">
          Sectores seleccionados:
          <strong style="color: #33cc9d;">
            <span id="selected-sectors">Todos</span>
          </strong><br>
        </p>
        <div id="leaflet"></div>
      </div>
    </div>

    <div class="mt-2">
      <%= f.text_field :location %>
    </div>
  </fieldset>

  <div class="actions" style="border: none;">
      <div style="display: none;">
        <%= f.check_box :terms_of_service,
            title: t("form.accept_terms_title"),
            label: t("form.accept_terms",
                    policy: link_to(t("form.policy"), "/privacy", target: "blank"),
                    conditions: link_to(t("form.conditions"), "/conditions", target: "blank")
                    ),
            checked: true %>
      </div>
    <%= f.submit class: 'solid-button-sm' %>
  </div>
<% end %>

<script src="https://cdn.rawgit.com/aparshin/leaflet-boundary-canvas/f00b4d35/src/BoundaryCanvas.js"></script>
<script>
var map = new L.Map('leaflet')
$.getJSON('/UV_KML.geojson', function(lasCondesSectors) {
  var osm = new L.TileLayer.BoundaryCanvas("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    boundary: lasCondesSectors,
  });
  map.addLayer(osm)

  // Variables for map
  var allSectors = <%= raw(Sector.all.map{ |s| s.name }) %>
  var availableFeatures = <%= raw(budget.headings.first.sectors.map{ |s| s.name }) %>
  var selectedFeatures = <%= raw(investment.sectors.map{ |s| s.name }) %>

  if (availableFeatures) {
    if (allSectors.sort().join(',') !== availableFeatures.sort().join(',')) {
      $('#available-sectors').text(availableFeatures.join(', '))
    } else {
       $('#available-sectors').text('Todos')
    }
  }

  if (selectedFeatures.length) {
    $('#selected-sectors').text(selectedFeatures.join(', '))
  }

  var defaultStyle = {
      color: 'gray',
      fillOpacity: 0,
      weight: 2,
  }

  // Actions
  function colorlayer(feature, layer) {
    layer.setStyle(defaultStyle)
    
    if (!availableFeatures.includes(feature.properties.name.replaceAll('-', ''))) {
      layer.setStyle({
        color: "gray",
        opacity: 0.6,
        fillOpacity: 0.5
      })
    }

    if (selectedFeatures.includes(feature.properties.name.replaceAll('-', ''))) {
      layer.setStyle({
        color: "#00008c",
        opacity: 0.6,
        fillOpacity: 0.5
      })
    }

    layer.on('click', function(e) {
      if (!availableFeatures.includes(feature.properties.name.replaceAll('-', ''))) {
        return
      }
      var name = feature.properties.name.replaceAll('-', '')

      if (selectedFeatures.includes(name)) {
        layer.setStyle(defaultStyle)
        selectedFeatures = selectedFeatures.filter(sf => sf !== name)
      } else {
        selectedFeatures.push(name)
        layer.setStyle({
          color: "#00008c",
          opacity: 0.6,
          fillOpacity: 0.5
        })
      }

      Array.from(Array(25).keys()).forEach(function(n) {
        $('#budget_investment_sector_ids_c' + (n + 1)).prop('checked', false)
      })

      selectedFeatures.forEach(function(sf) {
        $('#budget_investment_sector_ids_' + sf.toLowerCase()).prop('checked', true)
      })
      $('#selected-sectors').text(selectedFeatures.length ? selectedFeatures.join(', ') : 'Todos')
    })
  }

  // Bounds
  var gjLayer = L.geoJSON(lasCondesSectors);
  map.fitBounds(gjLayer.getBounds());

  // Load features
  L.geoJSON(lasCondesSectors, {
      onEachFeature: colorlayer
  }).addTo(map)

  // Map config
  map.dragging.disable()
  map.touchZoom.disable();
  map.doubleClickZoom.disable();
  map.scrollWheelZoom.disable();
  map.boxZoom.disable();
  map.keyboard.disable();
})
</script>
