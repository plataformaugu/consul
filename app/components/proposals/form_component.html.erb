<%= translatable_form_for(proposal, url: url, html: { class: "proposal-form" }) do |f| %>
  <%= render "shared/errors", resource: proposal %>

  <fieldset class="required-fields">
    <legend><%= t("shared.required") %></legend>

    <%= render "shared/globalize_locales", resource: proposal %>

    <%= f.translatable_fields do |translations_form| %>
      <div>
        <%= translations_form.text_field :title,
              maxlength: Proposal.title_max_length,
              data: suggest_data(proposal) %>
      </div>
      <div class="js-suggest" data-locale="<%= translations_form.locale %>"></div>

      <div>
        <%= translations_form.text_area :summary,
                                        rows: 4, maxlength: 200,
                                        hint: t("proposals.form.proposal_summary_note") %>
      </div>

      <div>
        <%= translations_form.text_area :description,
                                        maxlength: Proposal.description_max_length,
                                        class: "html-area" %>
      </div>
    <% end %>
  </fieldset>

  <%= f.invisible_captcha :subtitle %>

  <fieldset>
    <legend><%= t("shared.optional") %></legend>

    <div>
      <%= f.text_field :video_url, hint: t("proposals.form.proposal_video_url_note") %>
    </div>

    <% if feature?(:allow_images) %>
      <div class="images">
        <%= render "images/nested_image", f: f %>
      </div>
    <% end %>

    <% if feature?(:allow_attached_documents) %>
      <div class="documents">
        <%= render "documents/nested_documents", f: f %>
      </div>
    <% end %>

    <% if feature?(:map) %>
      <%= check_box_tag 'show_map' %>
      <%= label_tag 'show_map', '¿La propuesta estará enfocada en algunos sectores de la comuna?' %>
      <br>
      <div id="leaflet-container">
        <div style="display: none;">
          <%= f.collection_check_boxes :sector_ids, Sector.all, :name, :name, include_hidden: false, id: 'sector_ids' %>
        </div>
        <%= label_tag 'leaflet', 'Elige los sectores' %>
        <p class="help-text" id="tag-list-help-text">
          Sectores seleccionados: <strong><span id="selected-sectors">Ninguno</span></strong>
        </p>
        <div id="leaflet"></div>
      </div>
    <% end %>

    <div>
      <%= f.label :tag_list, t("proposals.form.tags_label") %>
      <p class="help-text" id="tag-list-help-text"><%= t("proposals.form.tags_instructions") %></p>

      <div id="category_tags" class="tags">
        <%= f.label :category_tag_list, t("proposals.form.tag_category_label") %>
        <% categories.each do |tag| %>
          <a class="js-add-tag-link"><%= tag.name %></a>
        <% end %>
      </div>

      <br>
      <%= f.text_field :tag_list, value: proposal.tag_list.to_s,
                        label: false,
                        placeholder: t("proposals.form.tags_placeholder"),
                        class: "js-tag-list tag-autocomplete",
                        aria: { describedby: "tag-list-help-text" },
                        data: { js_url: suggest_tags_path } %>
    </div>

    <% if current_user.unverified? %>
      <div>
        <%= f.text_field :responsible_name,
          hint: t("proposals.form.proposal_responsible_name_note") %>
      </div>
    <% end %>

    <%= render SDG::RelatedListSelectorComponent.new(f) %>
  </fieldset>

  <div class="actions">
    <% if proposal.new_record? %>
      <div>
        <%= f.check_box :terms_of_service,
          title: t("form.accept_terms_title"),
          label: t("form.accept_terms",
                   policy: link_to(t("form.policy"), "/privacy", target: "blank"),
                   conditions: link_to(t("form.conditions"), "/condiciones", target: "blank")
                  ) %>
      </div>
    <% end %>

    <%= f.submit(class: "button", value: t("proposals.#{action_name}.form.submit_button")) %>
  </div>
<% end %>

<script src="https://cdn.rawgit.com/aparshin/leaflet-boundary-canvas/f00b4d35/src/BoundaryCanvas.js"></script>
<script>
$(document).ready(function () {
  if ($('#show_map').is(':checked')) {
      $('#leaflet-container').show()
    } else {
      $('#leaflet-container').hide()
    }
  })

$('#show_map').on('change', function() {
  if ($('#show_map').is(':checked')) {
    $('#leaflet-container').show()
  } else {
    $('#leaflet-container').hide()
  }
})

// MAP
const map = new L.Map('leaflet')

$.getJSON('/UV_KML.geojson', function(lasCondesSectors) {
  const osm = new L.TileLayer.BoundaryCanvas("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    boundary: lasCondesSectors,
  });
  map.addLayer(osm)

  // Variables for map
  let selectedFeatures = []
  const defaultStyle = {
      color: 'gray',
      fillOpacity: 0,
      weight: 2,
  }

  // Actions
  function colorlayer(feature, layer) {
    layer.setStyle(defaultStyle)

    layer.on('click', function(e) {
      const name = feature.properties.name.replaceAll('-', '')

      if (selectedFeatures.includes(name)) {
        layer.setStyle(defaultStyle)
        selectedFeatures = selectedFeatures.filter(sf => sf !== name)
      } else {
        selectedFeatures.push(name)
        layer.setStyle({
          color: "#00008c",
          opacity: 0.6,
          fillOpacity: 0.5
        })
      }

      Array.from(Array(25).keys()).forEach(function(n) {
        $('#proposal_sector_ids_c' + (n + 1)).prop('checked', false)
      })

      selectedFeatures.forEach(function(sf) {
        $('#proposal_sector_ids_' + sf.toLowerCase()).prop('checked', true)
      })
      $('#selected-sectors').text(selectedFeatures.length ? selectedFeatures.join(', ') : 'Ninguno')
    })
  }

  // Bounds
  const gjLayer = L.geoJSON(lasCondesSectors);
  map.fitBounds(gjLayer.getBounds());

  // Load features
  L.geoJSON(lasCondesSectors, {
      onEachFeature: colorlayer
  }).addTo(map)

  // Map config
  map.dragging.disable()
  map.touchZoom.disable();
  map.doubleClickZoom.disable();
  map.scrollWheelZoom.disable();
  map.boxZoom.disable();
  map.keyboard.disable();
})

</script>
